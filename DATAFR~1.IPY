{
    "metadata": {
        "kernelspec": {
            "name": "python3",
            "display_name": "Python 3 (ipykernel)",
            "language": "python"
        },
        "language_info": {
            "name": "python",
            "version": "3.8.10",
            "mimetype": "text/x-python",
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "pygments_lexer": "ipython3",
            "nbconvert_exporter": "python",
            "file_extension": ".py"
        }
    },
    "nbformat_minor": 2,
    "nbformat": 4,
    "cells": [
        {
            "cell_type": "markdown",
            "source": [
                "# Instruções gerais\n",
                "\n",
                "Para executar uma CÉLULA, pressione o botão \"Run\" no topo, com a CÉLULA selecionada, ou pressione:\n",
                "    \n",
                "    Shift + Enter\n",
                "\n",
                "EXECUTE APENAS UMA CÉLULA POR VEZ\n",
                "\n",
                "-Caso deseje apagar a saída de uma célula carregada, mas não deseje carregar uma nova saída, vá à aba superior, escolha o ícone\n",
                "do teclado (open the command palette/ jupyter-notebook command group) e selecione clear cell output.\n",
                "\n",
                "@author: Marco César Prado Soares, MSc.\n",
                "Especialista Lean Six Sigma Master Black Belt, Eng. Químico, MSc. Eng. Mecatrônica (instrumentação) \n",
                "Marco.Soares@br.ey.com; marcosoares.feq@gmail.com"
            ],
            "metadata": {
                "azdata_cell_guid": "9e7f0e21-4147-47b6-9c79-116a78cdcebb"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "# **Caracterização Inicial do Dataframe e Data Cleaning**"
            ],
            "metadata": {
                "azdata_cell_guid": "8c8f0b29-84c1-4ea6-b3a7-ca23de244e50"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "## **Carregar bibliotecas necessárias à análise**"
            ],
            "metadata": {
                "azdata_cell_guid": "8dd5c4f4-f98c-457d-a4a9-42647d13fbea"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "import pandas as pd\n",
                "import numpy as np\n",
                "import matplotlib.pyplot as plt\n",
                "import seaborn as sns"
            ],
            "metadata": {
                "azdata_cell_guid": "420e5c38-6512-4db0-bf3c-198b841a1b87"
            },
            "outputs": [],
            "execution_count": 28
        },
        {
            "cell_type": "markdown",
            "source": [
                "## **Importar dataframe no Anaconda, Azure Data Studio, ou Google Colab**"
            ],
            "metadata": {
                "azdata_cell_guid": "3d40233a-b6ad-4de3-8991-faa8429dc4f1"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "<span style=\"font-size:12.0pt;\n",
                "font-family:&quot;Times New Roman&quot;,serif\">- Tanto em Python quanto em R, um dataframe é um <b>objeto criado</b> que <b>armazena uma tabela de dados</b>.</span>\n",
                "\n",
                "<span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,serif\">- O objeto é criado automaticamente quando importamos um arquivo txt, csv, ou xlsx para o ambiente de programação, ou quando o criamos a partir de um dicionário, por exemplo (dicionário é um objeto que pode armazenar outros objetos de diversos tipos, desde variáveis numéricas até dataframes ou listas).</span>\n",
                "\n",
                "<span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,serif;\n",
                "mso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-ansi-language:\n",
                "PT-BR;mso-fareast-language:EN-US;mso-bidi-language:AR-SA\">- Para importar o dataframe, utilizamos comandos do Pandas que variam para arquivo do Excel, csv com cabeçalho, ou csv sem cabeçalho. <b><span style=\"color:red\">Arquivos .txt e .csv são lidos da mesma forma</span></b>.</span>"
            ],
            "metadata": {
                "azdata_cell_guid": "6ac8a213-5a18-4586-80c6-09cbd58808f9"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "**Dados em arquivo CSV (comma separated values) sem cabeçalho**"
            ],
            "metadata": {
                "azdata_cell_guid": "975d1637-a266-4a67-9d71-8fe9f20c784e"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "## dados em arquivo CSV (comma separated values) sem cabeçalho\n",
                "\n",
                "caminho = \"PM_test.txt\"\n",
                "\n",
                "dataset_test = pd.read_csv(caminho, delim_whitespace=True, header=None)\n",
                "\n",
                "#here, the dataset is in a textfile. In these cases, use delim_withespace = True\n",
                "#or df = pd.read_fwf('output_list.txt')\n",
                "#since data has no Head, keep header = None\n",
                "#if there is Head, eliminate ‘header’ from the arguments of the function\n",
                "\n",
                "dataset_test.head()"
            ],
            "metadata": {
                "azdata_cell_guid": "82d30367-e259-4462-8bce-2a6b5cba7e49",
                "tags": []
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "   0   1       2       3      4       5       6        7        8      9   \\\n0   1   1  0.0023  0.0003  100.0  518.67  643.02  1585.29  1398.21  14.62   \n1   1   2 -0.0027 -0.0003  100.0  518.67  641.71  1588.45  1395.42  14.62   \n2   1   3  0.0003  0.0001  100.0  518.67  642.46  1586.94  1401.34  14.62   \n3   1   4  0.0042  0.0000  100.0  518.67  642.44  1584.12  1406.42  14.62   \n4   1   5  0.0014  0.0000  100.0  518.67  642.51  1587.19  1401.92  14.62   \n\n   ...      16       17       18      19    20   21    22     23     24  \\\n0  ...  521.72  2388.03  8125.55  8.4052  0.03  392  2388  100.0  38.86   \n1  ...  522.16  2388.06  8139.62  8.3803  0.03  393  2388  100.0  39.02   \n2  ...  521.97  2388.03  8130.10  8.4441  0.03  393  2388  100.0  39.08   \n3  ...  521.38  2388.05  8132.90  8.3917  0.03  391  2388  100.0  39.00   \n4  ...  522.15  2388.03  8129.54  8.4031  0.03  390  2388  100.0  38.99   \n\n        25  \n0  23.3735  \n1  23.3916  \n2  23.4166  \n3  23.3737  \n4  23.4130  \n\n[5 rows x 26 columns]",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>16</th>\n      <th>17</th>\n      <th>18</th>\n      <th>19</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>0.0023</td>\n      <td>0.0003</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>643.02</td>\n      <td>1585.29</td>\n      <td>1398.21</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.72</td>\n      <td>2388.03</td>\n      <td>8125.55</td>\n      <td>8.4052</td>\n      <td>0.03</td>\n      <td>392</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.86</td>\n      <td>23.3735</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>-0.0027</td>\n      <td>-0.0003</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>641.71</td>\n      <td>1588.45</td>\n      <td>1395.42</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.16</td>\n      <td>2388.06</td>\n      <td>8139.62</td>\n      <td>8.3803</td>\n      <td>0.03</td>\n      <td>393</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>39.02</td>\n      <td>23.3916</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>0.0003</td>\n      <td>0.0001</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.46</td>\n      <td>1586.94</td>\n      <td>1401.34</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.97</td>\n      <td>2388.03</td>\n      <td>8130.10</td>\n      <td>8.4441</td>\n      <td>0.03</td>\n      <td>393</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>39.08</td>\n      <td>23.4166</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>4</td>\n      <td>0.0042</td>\n      <td>0.0000</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.44</td>\n      <td>1584.12</td>\n      <td>1406.42</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.38</td>\n      <td>2388.05</td>\n      <td>8132.90</td>\n      <td>8.3917</td>\n      <td>0.03</td>\n      <td>391</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>39.00</td>\n      <td>23.3737</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>5</td>\n      <td>0.0014</td>\n      <td>0.0000</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.51</td>\n      <td>1587.19</td>\n      <td>1401.92</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.15</td>\n      <td>2388.03</td>\n      <td>8129.54</td>\n      <td>8.4031</td>\n      <td>0.03</td>\n      <td>390</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.99</td>\n      <td>23.4130</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 26 columns</p>\n</div>"
                    },
                    "metadata": {},
                    "execution_count": 36,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 36
        },
        {
            "cell_type": "code",
            "source": [
                "## dados em arquivo CSV (comma separated values) sem cabeçalho\r\n",
                "\r\n",
                "caminho = \"PM_train.txt\"\r\n",
                "\r\n",
                "dataset_train = pd.read_csv(caminho, delim_whitespace=True, header=None)\r\n",
                "\r\n",
                "#here, the dataset is in a textfile. In these cases, use delim_withespace = True\r\n",
                "#or df = pd.read_fwf('output_list.txt')\r\n",
                "#since data has no Head, keep header = None\r\n",
                "#if there is Head, eliminate ‘header’ from the arguments of the function\r\n",
                "\r\n",
                "dataset_train.head()"
            ],
            "metadata": {
                "azdata_cell_guid": "cc28c611-02c3-4799-b0e5-49eca07a7adf"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "   0   1       2       3      4       5       6        7        8      9   \\\n0   1   1 -0.0007 -0.0004  100.0  518.67  641.82  1589.70  1400.60  14.62   \n1   1   2  0.0019 -0.0003  100.0  518.67  642.15  1591.82  1403.14  14.62   \n2   1   3 -0.0043  0.0003  100.0  518.67  642.35  1587.99  1404.20  14.62   \n3   1   4  0.0007  0.0000  100.0  518.67  642.35  1582.79  1401.87  14.62   \n4   1   5 -0.0019 -0.0002  100.0  518.67  642.37  1582.85  1406.22  14.62   \n\n   ...      16       17       18      19    20   21    22     23     24  \\\n0  ...  521.66  2388.02  8138.62  8.4195  0.03  392  2388  100.0  39.06   \n1  ...  522.28  2388.07  8131.49  8.4318  0.03  392  2388  100.0  39.00   \n2  ...  522.42  2388.03  8133.23  8.4178  0.03  390  2388  100.0  38.95   \n3  ...  522.86  2388.08  8133.83  8.3682  0.03  392  2388  100.0  38.88   \n4  ...  522.19  2388.04  8133.80  8.4294  0.03  393  2388  100.0  38.90   \n\n        25  \n0  23.4190  \n1  23.4236  \n2  23.3442  \n3  23.3739  \n4  23.4044  \n\n[5 rows x 26 columns]",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>16</th>\n      <th>17</th>\n      <th>18</th>\n      <th>19</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>-0.0007</td>\n      <td>-0.0004</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>641.82</td>\n      <td>1589.70</td>\n      <td>1400.60</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.66</td>\n      <td>2388.02</td>\n      <td>8138.62</td>\n      <td>8.4195</td>\n      <td>0.03</td>\n      <td>392</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>39.06</td>\n      <td>23.4190</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>0.0019</td>\n      <td>-0.0003</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.15</td>\n      <td>1591.82</td>\n      <td>1403.14</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.28</td>\n      <td>2388.07</td>\n      <td>8131.49</td>\n      <td>8.4318</td>\n      <td>0.03</td>\n      <td>392</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>39.00</td>\n      <td>23.4236</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>-0.0043</td>\n      <td>0.0003</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.35</td>\n      <td>1587.99</td>\n      <td>1404.20</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.42</td>\n      <td>2388.03</td>\n      <td>8133.23</td>\n      <td>8.4178</td>\n      <td>0.03</td>\n      <td>390</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.95</td>\n      <td>23.3442</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>4</td>\n      <td>0.0007</td>\n      <td>0.0000</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.35</td>\n      <td>1582.79</td>\n      <td>1401.87</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.86</td>\n      <td>2388.08</td>\n      <td>8133.83</td>\n      <td>8.3682</td>\n      <td>0.03</td>\n      <td>392</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.88</td>\n      <td>23.3739</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>5</td>\n      <td>-0.0019</td>\n      <td>-0.0002</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.37</td>\n      <td>1582.85</td>\n      <td>1406.22</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.19</td>\n      <td>2388.04</td>\n      <td>8133.80</td>\n      <td>8.4294</td>\n      <td>0.03</td>\n      <td>393</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.90</td>\n      <td>23.4044</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 26 columns</p>\n</div>"
                    },
                    "metadata": {},
                    "execution_count": 37,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 37
        },
        {
            "cell_type": "markdown",
            "source": [
                "## **Avaliar propriedades gerais do dataframe**"
            ],
            "metadata": {
                "azdata_cell_guid": "9061ea93-2444-40c7-87c4-3ff244186a66"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "### **2\\. Saber total de linhas do dataframe:**"
            ],
            "metadata": {
                "azdata_cell_guid": "b17931e2-e5e1-4759-a554-ecd17667a1b3"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "total_test = len(dataset_test)\r\n",
                "print(total_test)"
            ],
            "metadata": {
                "azdata_cell_guid": "50b68be4-4583-4f98-b6f5-6226d49a005b"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "text": "13096\n",
                    "output_type": "stream"
                }
            ],
            "execution_count": 31
        },
        {
            "cell_type": "code",
            "source": [
                "total_train = len(dataset_train)\r\n",
                "print(total_train)"
            ],
            "metadata": {
                "azdata_cell_guid": "dceff0f5-986f-4eaa-945f-9596b09d8714"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "text": "20631\n",
                    "output_type": "stream"
                }
            ],
            "execution_count": 32
        },
        {
            "cell_type": "markdown",
            "source": [
                "<span style=\"font-size:12.0pt;\n",
                "font-family:&quot;Times New Roman&quot;,serif\">Este comando armazena em “total” a quantidade de linhas (tamanho) do dataframe df. O comando <b><span style=\"color:red\">len (<span style=\"background:yellow;mso-highlight:\n",
                "yellow\">objeto</span>)</span></b> sempre calcula a dimensão (length) do <span style=\"background:yellow;mso-highlight:yellow\">objeto</span>.<o:p></o:p></span>"
            ],
            "metadata": {
                "azdata_cell_guid": "43d71e06-e9a2-4c77-81d4-67b4290fd8df"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "### **3\\. Saber formato do dataframe (total de linhas, total de colunas):**"
            ],
            "metadata": {
                "azdata_cell_guid": "2f10029c-8c55-4b24-9afe-a5a84009294b"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "dataset_train.shape()"
            ],
            "metadata": {
                "azdata_cell_guid": "adc66638-3321-4678-b77f-ace0363d6ae5"
            },
            "outputs": [
                {
                    "traceback": [
                        "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                        "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                        "\u001b[1;32mC:\\Users\\W1ND0W~1\\AppData\\Local\\Temp/ipykernel_11992/1340290092.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mdataset_train\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
                        "\u001b[1;31mTypeError\u001b[0m: 'tuple' object is not callable"
                    ],
                    "ename": "TypeError",
                    "evalue": "'tuple' object is not callable",
                    "output_type": "error"
                }
            ],
            "execution_count": 33
        },
        {
            "cell_type": "markdown",
            "source": [
                "<span style=\"font-size:12.0pt;line-height:115%;\n",
                "font-family:&quot;Times New Roman&quot;,serif;mso-fareast-font-family:Calibri;mso-fareast-theme-font:\n",
                "minor-latin;mso-ansi-language:PT-BR;mso-fareast-language:EN-US;mso-bidi-language:\n",
                "AR-SA\">Este comando mostra as dimensões do dataframe df no formato (X, Y). Por exemplo, uma saída (1470, 35) representa um dataframe de 1470 linhas (entradas) por 35 colunas (variáveis/features).</span>"
            ],
            "metadata": {
                "azdata_cell_guid": "766f2910-77aa-49c9-80c0-d8e6e9d33dba"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "### **4. Saber os tipos de variáveis ou objetos do dataframe:**"
            ],
            "metadata": {
                "azdata_cell_guid": "5dbc2bdb-bfac-4b8e-b94d-5b263392ee98"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "dataset_train.info()"
            ],
            "metadata": {
                "azdata_cell_guid": "9a40b878-de04-4195-a516-8d6acd656b74"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "text": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 20631 entries, 0 to 20630\nData columns (total 26 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   0       20631 non-null  int64  \n 1   1       20631 non-null  int64  \n 2   2       20631 non-null  float64\n 3   3       20631 non-null  float64\n 4   4       20631 non-null  float64\n 5   5       20631 non-null  float64\n 6   6       20631 non-null  float64\n 7   7       20631 non-null  float64\n 8   8       20631 non-null  float64\n 9   9       20631 non-null  float64\n 10  10      20631 non-null  float64\n 11  11      20631 non-null  float64\n 12  12      20631 non-null  float64\n 13  13      20631 non-null  float64\n 14  14      20631 non-null  float64\n 15  15      20631 non-null  float64\n 16  16      20631 non-null  float64\n 17  17      20631 non-null  float64\n 18  18      20631 non-null  float64\n 19  19      20631 non-null  float64\n 20  20      20631 non-null  float64\n 21  21      20631 non-null  int64  \n 22  22      20631 non-null  int64  \n 23  23      20631 non-null  float64\n 24  24      20631 non-null  float64\n 25  25      20631 non-null  float64\ndtypes: float64(22), int64(4)\nmemory usage: 4.1 MB\n",
                    "output_type": "stream"
                }
            ],
            "execution_count": 9
        },
        {
            "cell_type": "code",
            "source": [
                "dataset_test.info()"
            ],
            "metadata": {
                "azdata_cell_guid": "9afb5513-d274-4dfe-8c9d-c04a4322eb07"
            },
            "outputs": [
                {
                    "name": "stdout",
                    "text": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 13096 entries, 0 to 13095\nData columns (total 26 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   0       13096 non-null  int64  \n 1   1       13096 non-null  int64  \n 2   2       13096 non-null  float64\n 3   3       13096 non-null  float64\n 4   4       13096 non-null  float64\n 5   5       13096 non-null  float64\n 6   6       13096 non-null  float64\n 7   7       13096 non-null  float64\n 8   8       13096 non-null  float64\n 9   9       13096 non-null  float64\n 10  10      13096 non-null  float64\n 11  11      13096 non-null  float64\n 12  12      13096 non-null  float64\n 13  13      13096 non-null  float64\n 14  14      13096 non-null  float64\n 15  15      13096 non-null  float64\n 16  16      13096 non-null  float64\n 17  17      13096 non-null  float64\n 18  18      13096 non-null  float64\n 19  19      13096 non-null  float64\n 20  20      13096 non-null  float64\n 21  21      13096 non-null  int64  \n 22  22      13096 non-null  int64  \n 23  23      13096 non-null  float64\n 24  24      13096 non-null  float64\n 25  25      13096 non-null  float64\ndtypes: float64(22), int64(4)\nmemory usage: 2.6 MB\n",
                    "output_type": "stream"
                }
            ],
            "execution_count": 10
        },
        {
            "cell_type": "markdown",
            "source": [
                "### **5. Mostrar primeira linha do dataframe:**"
            ],
            "metadata": {
                "azdata_cell_guid": "b92e3e3a-b18b-4796-a89d-4ead2cb6cb93"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "display(dataset_train.iloc[0])"
            ],
            "metadata": {
                "azdata_cell_guid": "ef8a988f-7720-4e7b-badf-5db0f97c0a28"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "0        1.0000\n1        1.0000\n2       -0.0007\n3       -0.0004\n4      100.0000\n5      518.6700\n6      641.8200\n7     1589.7000\n8     1400.6000\n9       14.6200\n10      21.6100\n11     554.3600\n12    2388.0600\n13    9046.1900\n14       1.3000\n15      47.4700\n16     521.6600\n17    2388.0200\n18    8138.6200\n19       8.4195\n20       0.0300\n21     392.0000\n22    2388.0000\n23     100.0000\n24      39.0600\n25      23.4190\nName: 0, dtype: float64"
                    },
                    "metadata": {},
                    "output_type": "display_data"
                }
            ],
            "execution_count": 11
        },
        {
            "cell_type": "markdown",
            "source": [
                "<span style=\"font-size:12.0pt;line-height:115%;\n",
                "font-family:&quot;Times New Roman&quot;,serif;mso-fareast-font-family:Calibri;mso-fareast-theme-font:\n",
                "minor-latin;mso-ansi-language:PT-BR;mso-fareast-language:EN-US;mso-bidi-language:\n",
                "AR-SA\">Este comando mostra o valor assumido por cada variável (coluna) na <b>primeira linha</b> do dataset, possibilitando uma visualização dos valores e ordens de grandeza.</span>"
            ],
            "metadata": {
                "azdata_cell_guid": "9b2b4f09-f0f5-4d86-b136-a828a24846d8"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "### **6. Verificar se o dataframe apresenta entradas nulas:**"
            ],
            "metadata": {
                "azdata_cell_guid": "f6ea6998-4528-4a42-a9b3-055feeaa78e5"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "dataset_train.isnull().any()"
            ],
            "metadata": {
                "azdata_cell_guid": "8fb51bbd-192b-4329-8e97-abc73b98ee2c"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "0     False\n1     False\n2     False\n3     False\n4     False\n5     False\n6     False\n7     False\n8     False\n9     False\n10    False\n11    False\n12    False\n13    False\n14    False\n15    False\n16    False\n17    False\n18    False\n19    False\n20    False\n21    False\n22    False\n23    False\n24    False\n25    False\ndtype: bool"
                    },
                    "metadata": {},
                    "execution_count": 12,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 12
        },
        {
            "cell_type": "code",
            "source": [
                "dataset_test.isnull().any()"
            ],
            "metadata": {
                "azdata_cell_guid": "59ec2d00-e562-46cd-8ed7-6e2e31cdff28"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "0     False\n1     False\n2     False\n3     False\n4     False\n5     False\n6     False\n7     False\n8     False\n9     False\n10    False\n11    False\n12    False\n13    False\n14    False\n15    False\n16    False\n17    False\n18    False\n19    False\n20    False\n21    False\n22    False\n23    False\n24    False\n25    False\ndtype: bool"
                    },
                    "metadata": {},
                    "execution_count": 13,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 13
        },
        {
            "cell_type": "markdown",
            "source": [
                "### **9\\. Obter estatísticas gerais do dataset:**"
            ],
            "metadata": {
                "azdata_cell_guid": "445a7cce-80e7-4632-9db8-1edf9831ca51"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "dataset_train.describe()"
            ],
            "metadata": {
                "azdata_cell_guid": "a51999b7-553c-484b-8fc8-e07f12c597e1"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "                 0             1             2             3        4   \\\ncount  20631.000000  20631.000000  20631.000000  20631.000000  20631.0   \nmean      51.506568    108.807862     -0.000009      0.000002    100.0   \nstd       29.227633     68.880990      0.002187      0.000293      0.0   \nmin        1.000000      1.000000     -0.008700     -0.000600    100.0   \n25%       26.000000     52.000000     -0.001500     -0.000200    100.0   \n50%       52.000000    104.000000      0.000000      0.000000    100.0   \n75%       77.000000    156.000000      0.001500      0.000300    100.0   \nmax      100.000000    362.000000      0.008700      0.000600    100.0   \n\n             5             6             7             8             9   ...  \\\ncount  20631.00  20631.000000  20631.000000  20631.000000  2.063100e+04  ...   \nmean     518.67    642.680934   1590.523119   1408.933782  1.462000e+01  ...   \nstd        0.00      0.500053      6.131150      9.000605  1.776400e-15  ...   \nmin      518.67    641.210000   1571.040000   1382.250000  1.462000e+01  ...   \n25%      518.67    642.325000   1586.260000   1402.360000  1.462000e+01  ...   \n50%      518.67    642.640000   1590.100000   1408.040000  1.462000e+01  ...   \n75%      518.67    643.000000   1594.380000   1414.555000  1.462000e+01  ...   \nmax      518.67    644.530000   1616.910000   1441.490000  1.462000e+01  ...   \n\n                 16            17            18            19            20  \\\ncount  20631.000000  20631.000000  20631.000000  20631.000000  2.063100e+04   \nmean     521.413470   2388.096152   8143.752722      8.442146  3.000000e-02   \nstd        0.737553      0.071919     19.076176      0.037505  1.387812e-17   \nmin      518.690000   2387.880000   8099.940000      8.324900  3.000000e-02   \n25%      520.960000   2388.040000   8133.245000      8.414900  3.000000e-02   \n50%      521.480000   2388.090000   8140.540000      8.438900  3.000000e-02   \n75%      521.950000   2388.140000   8148.310000      8.465600  3.000000e-02   \nmax      523.380000   2388.560000   8293.720000      8.584800  3.000000e-02   \n\n                 21       22       23            24            25  \ncount  20631.000000  20631.0  20631.0  20631.000000  20631.000000  \nmean     393.210654   2388.0    100.0     38.816271     23.289705  \nstd        1.548763      0.0      0.0      0.180746      0.108251  \nmin      388.000000   2388.0    100.0     38.140000     22.894200  \n25%      392.000000   2388.0    100.0     38.700000     23.221800  \n50%      393.000000   2388.0    100.0     38.830000     23.297900  \n75%      394.000000   2388.0    100.0     38.950000     23.366800  \nmax      400.000000   2388.0    100.0     39.430000     23.618400  \n\n[8 rows x 26 columns]",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>16</th>\n      <th>17</th>\n      <th>18</th>\n      <th>19</th>\n      <th>20</th>\n      <th>21</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>20631.0</td>\n      <td>20631.00</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>2.063100e+04</td>\n      <td>...</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n      <td>2.063100e+04</td>\n      <td>20631.000000</td>\n      <td>20631.0</td>\n      <td>20631.0</td>\n      <td>20631.000000</td>\n      <td>20631.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>51.506568</td>\n      <td>108.807862</td>\n      <td>-0.000009</td>\n      <td>0.000002</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.680934</td>\n      <td>1590.523119</td>\n      <td>1408.933782</td>\n      <td>1.462000e+01</td>\n      <td>...</td>\n      <td>521.413470</td>\n      <td>2388.096152</td>\n      <td>8143.752722</td>\n      <td>8.442146</td>\n      <td>3.000000e-02</td>\n      <td>393.210654</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.816271</td>\n      <td>23.289705</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>29.227633</td>\n      <td>68.880990</td>\n      <td>0.002187</td>\n      <td>0.000293</td>\n      <td>0.0</td>\n      <td>0.00</td>\n      <td>0.500053</td>\n      <td>6.131150</td>\n      <td>9.000605</td>\n      <td>1.776400e-15</td>\n      <td>...</td>\n      <td>0.737553</td>\n      <td>0.071919</td>\n      <td>19.076176</td>\n      <td>0.037505</td>\n      <td>1.387812e-17</td>\n      <td>1.548763</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.180746</td>\n      <td>0.108251</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>-0.008700</td>\n      <td>-0.000600</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>641.210000</td>\n      <td>1571.040000</td>\n      <td>1382.250000</td>\n      <td>1.462000e+01</td>\n      <td>...</td>\n      <td>518.690000</td>\n      <td>2387.880000</td>\n      <td>8099.940000</td>\n      <td>8.324900</td>\n      <td>3.000000e-02</td>\n      <td>388.000000</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.140000</td>\n      <td>22.894200</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>26.000000</td>\n      <td>52.000000</td>\n      <td>-0.001500</td>\n      <td>-0.000200</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.325000</td>\n      <td>1586.260000</td>\n      <td>1402.360000</td>\n      <td>1.462000e+01</td>\n      <td>...</td>\n      <td>520.960000</td>\n      <td>2388.040000</td>\n      <td>8133.245000</td>\n      <td>8.414900</td>\n      <td>3.000000e-02</td>\n      <td>392.000000</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.700000</td>\n      <td>23.221800</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>52.000000</td>\n      <td>104.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.640000</td>\n      <td>1590.100000</td>\n      <td>1408.040000</td>\n      <td>1.462000e+01</td>\n      <td>...</td>\n      <td>521.480000</td>\n      <td>2388.090000</td>\n      <td>8140.540000</td>\n      <td>8.438900</td>\n      <td>3.000000e-02</td>\n      <td>393.000000</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.830000</td>\n      <td>23.297900</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>77.000000</td>\n      <td>156.000000</td>\n      <td>0.001500</td>\n      <td>0.000300</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>643.000000</td>\n      <td>1594.380000</td>\n      <td>1414.555000</td>\n      <td>1.462000e+01</td>\n      <td>...</td>\n      <td>521.950000</td>\n      <td>2388.140000</td>\n      <td>8148.310000</td>\n      <td>8.465600</td>\n      <td>3.000000e-02</td>\n      <td>394.000000</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.950000</td>\n      <td>23.366800</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>100.000000</td>\n      <td>362.000000</td>\n      <td>0.008700</td>\n      <td>0.000600</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>644.530000</td>\n      <td>1616.910000</td>\n      <td>1441.490000</td>\n      <td>1.462000e+01</td>\n      <td>...</td>\n      <td>523.380000</td>\n      <td>2388.560000</td>\n      <td>8293.720000</td>\n      <td>8.584800</td>\n      <td>3.000000e-02</td>\n      <td>400.000000</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>39.430000</td>\n      <td>23.618400</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 26 columns</p>\n</div>"
                    },
                    "metadata": {},
                    "execution_count": 14,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 14
        },
        {
            "cell_type": "markdown",
            "source": [
                "<span style=\"font-size:12.0pt;\n",
                "font-family:&quot;Times New Roman&quot;,serif;color:black;mso-themecolor:text1\">A saída desse comando será um dataframe contendo as seguintes estatísticas gerais: contagem de entradas (count); média (mean); desvio-padrão (std); menor valor assumido (min); limites do 1º (25%), 2º (50%), e 3º quartis (75%); e maior valor assumido (max).</span>\n",
                "\n",
                "<span style=\"font-size:12.0pt;\n",
                "font-family:&quot;Times New Roman&quot;,serif;color:black;mso-themecolor:text1\">Atenção: <b>só serão mostradas as variáveis numéricas</b>. Variáveis classificatórias expressas como texto ou data/timestamp serão omitidas.<o:p></o:p></span>"
            ],
            "metadata": {
                "azdata_cell_guid": "c0a65d0d-958b-4310-a348-d8419cf31575"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "## **Modificar nomes das colunas**"
            ],
            "metadata": {
                "azdata_cell_guid": "b4302256-e7dd-4129-a3cb-2677183ccac4"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "Caso seja de interesse modificar os nomes das colunas (e.g. quando elas estão expressas apenas como índices) utilize os seguintes comandos:"
            ],
            "metadata": {
                "azdata_cell_guid": "aac95ee9-a4d0-4782-ba6b-e907d0fa8ee7"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "#1. Crie uma lista com os nomes das novas colunas\n",
                "column_names = ['Asset id', 'runtime', 'Setting1', 'Setting2', 'Setting3', 'Tag1', 'Tag2', 'Tag3', 'Tag4', 'Tag5', 'Tag6', 'Tag7', 'Tag8', 'Tag9', 'Tag10', 'Tag11', 'Tag12', 'Tag13', 'Tag14', 'Tag15', 'Tag16', 'Tag17', 'Tag18', 'Tag19', 'Tag20', 'Tag21']\n",
                "\n",
                "#2. Modifique os nomes das colunas do dataframe\n",
                "dataset_train.columns = column_names\n",
                "dataset_test.columns = column_names\n",
                "\n",
                "#3. Verifique se os nomes estão corretos\n",
                "dataset_train.head()"
            ],
            "metadata": {
                "azdata_cell_guid": "84132a0e-b70d-4f78-94e0-55f22fc5e181"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "   Asset id  runtime  Setting1  Setting2  Setting3    Tag1    Tag2     Tag3  \\\n0         1        1   -0.0007   -0.0004     100.0  518.67  641.82  1589.70   \n1         1        2    0.0019   -0.0003     100.0  518.67  642.15  1591.82   \n2         1        3   -0.0043    0.0003     100.0  518.67  642.35  1587.99   \n3         1        4    0.0007    0.0000     100.0  518.67  642.35  1582.79   \n4         1        5   -0.0019   -0.0002     100.0  518.67  642.37  1582.85   \n\n      Tag4   Tag5  ...   Tag12    Tag13    Tag14   Tag15  Tag16  Tag17  Tag18  \\\n0  1400.60  14.62  ...  521.66  2388.02  8138.62  8.4195   0.03    392   2388   \n1  1403.14  14.62  ...  522.28  2388.07  8131.49  8.4318   0.03    392   2388   \n2  1404.20  14.62  ...  522.42  2388.03  8133.23  8.4178   0.03    390   2388   \n3  1401.87  14.62  ...  522.86  2388.08  8133.83  8.3682   0.03    392   2388   \n4  1406.22  14.62  ...  522.19  2388.04  8133.80  8.4294   0.03    393   2388   \n\n   Tag19  Tag20    Tag21  \n0  100.0  39.06  23.4190  \n1  100.0  39.00  23.4236  \n2  100.0  38.95  23.3442  \n3  100.0  38.88  23.3739  \n4  100.0  38.90  23.4044  \n\n[5 rows x 26 columns]",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Asset id</th>\n      <th>runtime</th>\n      <th>Setting1</th>\n      <th>Setting2</th>\n      <th>Setting3</th>\n      <th>Tag1</th>\n      <th>Tag2</th>\n      <th>Tag3</th>\n      <th>Tag4</th>\n      <th>Tag5</th>\n      <th>...</th>\n      <th>Tag12</th>\n      <th>Tag13</th>\n      <th>Tag14</th>\n      <th>Tag15</th>\n      <th>Tag16</th>\n      <th>Tag17</th>\n      <th>Tag18</th>\n      <th>Tag19</th>\n      <th>Tag20</th>\n      <th>Tag21</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>-0.0007</td>\n      <td>-0.0004</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>641.82</td>\n      <td>1589.70</td>\n      <td>1400.60</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.66</td>\n      <td>2388.02</td>\n      <td>8138.62</td>\n      <td>8.4195</td>\n      <td>0.03</td>\n      <td>392</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>39.06</td>\n      <td>23.4190</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2</td>\n      <td>0.0019</td>\n      <td>-0.0003</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.15</td>\n      <td>1591.82</td>\n      <td>1403.14</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.28</td>\n      <td>2388.07</td>\n      <td>8131.49</td>\n      <td>8.4318</td>\n      <td>0.03</td>\n      <td>392</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>39.00</td>\n      <td>23.4236</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>-0.0043</td>\n      <td>0.0003</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.35</td>\n      <td>1587.99</td>\n      <td>1404.20</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.42</td>\n      <td>2388.03</td>\n      <td>8133.23</td>\n      <td>8.4178</td>\n      <td>0.03</td>\n      <td>390</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.95</td>\n      <td>23.3442</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>4</td>\n      <td>0.0007</td>\n      <td>0.0000</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.35</td>\n      <td>1582.79</td>\n      <td>1401.87</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.86</td>\n      <td>2388.08</td>\n      <td>8133.83</td>\n      <td>8.3682</td>\n      <td>0.03</td>\n      <td>392</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.88</td>\n      <td>23.3739</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>5</td>\n      <td>-0.0019</td>\n      <td>-0.0002</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.37</td>\n      <td>1582.85</td>\n      <td>1406.22</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.19</td>\n      <td>2388.04</td>\n      <td>8133.80</td>\n      <td>8.4294</td>\n      <td>0.03</td>\n      <td>393</td>\n      <td>2388</td>\n      <td>100.0</td>\n      <td>38.90</td>\n      <td>23.4044</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 26 columns</p>\n</div>"
                    },
                    "metadata": {},
                    "execution_count": 40,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 40
        },
        {
            "cell_type": "markdown",
            "source": [
                "Vamos agrupar em termos dos assets. Para a variável runtime, desejamos o valor máximo que ela apresenta em cada asset id (ou seja, qual o tempo que levou até a falha seguinte). Para as demais variáveis, desejamos a média.\n",
                "\n",
                "Assim, criar um dataset auxiliar agrupado em termos do asset para o treino, df\\_train, e um dataframe agrupado para o teste, df\\_test. As colunas runtime serão iguais ao valor máximo de runtime para cada agrupamento no dataset original, enquanto que as demais colunas apresentarão o valor médio do asset para aquele dataframe.\n",
                "\n",
                "Ao invés de criar o dataframe agrupado como .describe(), vamos criar já com a função .max. Assim, ele será criado com uma única coluna."
            ],
            "metadata": {
                "azdata_cell_guid": "19e61fb2-b9da-4050-b7ae-47bfa1476fc9"
            },
            "attachments": {}
        },
        {
            "cell_type": "code",
            "source": [
                "#Dataset de treino\r\n",
                "#column_names = ['Asset id', 'runtime', 'Setting1', 'Setting2', 'Setting3', 'Tag1', 'Tag2', 'Tag3', 'Tag4', 'Tag5', 'Tag6', 'Tag7', 'Tag8', 'Tag9', 'Tag10', \r\n",
                "#'Tag11', 'Tag12', 'Tag13', 'Tag14', 'Tag15', 'Tag16', 'Tag17', 'Tag18', 'Tag19', 'Tag20', 'Tag21']\r\n",
                "\r\n",
                "#lista dos índices\r\n",
                "indices = dataset_train.groupby('Asset id')[\"runtime\"].describe().index\r\n",
                "\r\n",
                "#lista do máximo runtime\r\n",
                "max_runtime = dataset_train.groupby('Asset id')[\"runtime\"].max()\r\n",
                "\r\n",
                "#listas dos valores médios\r\n",
                "avg1 = dataset_train.groupby('Asset id')[\"Setting1\"].mean()\r\n",
                "avg2= dataset_train.groupby('Asset id')[\"Setting2\"].mean()\r\n",
                "avg3 = dataset_train.groupby('Asset id')[\"Setting3\"].mean()\r\n",
                "avg4 = dataset_train.groupby('Asset id')[\"Tag1\"].mean()\r\n",
                "avg5= dataset_train.groupby('Asset id')[\"Tag2\"].mean()\r\n",
                "avg6= dataset_train.groupby('Asset id')[\"Tag3\"].mean()\r\n",
                "avg7= dataset_train.groupby('Asset id')[\"Tag4\"].mean()\r\n",
                "avg8= dataset_train.groupby('Asset id')[\"Tag5\"].mean()\r\n",
                "avg9= dataset_train.groupby('Asset id')[\"Tag6\"].mean()\r\n",
                "avg10= dataset_train.groupby('Asset id')[\"Tag7\"].mean()\r\n",
                "avg11= dataset_train.groupby('Asset id')[\"Tag8\"].mean()\r\n",
                "avg12= dataset_train.groupby('Asset id')[\"Tag9\"].mean()\r\n",
                "avg13= dataset_train.groupby('Asset id')[\"Tag10\"].mean()\r\n",
                "avg14= dataset_train.groupby('Asset id')[\"Tag11\"].mean()\r\n",
                "avg15= dataset_train.groupby('Asset id')[\"Tag12\"].mean()\r\n",
                "avg16= dataset_train.groupby('Asset id')[\"Tag13\"].mean()\r\n",
                "avg17= dataset_train.groupby('Asset id')[\"Tag14\"].mean()\r\n",
                "avg18= dataset_train.groupby('Asset id')[\"Tag15\"].mean()\r\n",
                "avg19= dataset_train.groupby('Asset id')[\"Tag16\"].mean()\r\n",
                "avg20= dataset_train.groupby('Asset id')[\"Tag17\"].mean()\r\n",
                "avg21= dataset_train.groupby('Asset id')[\"Tag18\"].mean()\r\n",
                "avg22= dataset_train.groupby('Asset id')[\"Tag19\"].mean()\r\n",
                "avg23= dataset_train.groupby('Asset id')[\"Tag20\"].mean()\r\n",
                "avg24= dataset_train.groupby('Asset id')[\"Tag21\"].mean()\r\n",
                "\r\n",
                "#dicionario dos valores\r\n",
                "d = {'Asset id': indices,  'runtime': max_runtime, 'Setting1': avg1, 'Setting2': avg2, 'Setting3': avg3, \r\n",
                "'Tag1': avg4, 'Tag2': avg5, 'Tag3': avg6, 'Tag4': avg7, 'Tag5': avg8, 'Tag6': avg9, 'Tag7': avg10, 'Tag8': avg11, \r\n",
                "'Tag9': avg12, 'Tag10': avg13, 'Tag11': avg14, 'Tag12': avg15, 'Tag13': avg16, 'Tag14': avg17, 'Tag15': avg18, \r\n",
                "'Tag16': avg19, 'Tag17': avg20, 'Tag18': avg21, 'Tag19': avg22, 'Tag20': avg23, 'Tag21': avg24}\r\n",
                "\r\n",
                "df_train = pd.DataFrame(data = d)\r\n",
                "df_train"
            ],
            "metadata": {
                "azdata_cell_guid": "4d0a7c5b-b2c4-4438-81b0-a214649808a2"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "          Asset id  runtime  Setting1  Setting2  Setting3    Tag1        Tag2  \\\nAsset id                                                                        \n1                1      192 -0.000189  0.000048     100.0  518.67  642.621042   \n2                2      287  0.000051  0.000088     100.0  518.67  642.435226   \n3                3      179  0.000137 -0.000014     100.0  518.67  642.543743   \n4                4      189  0.000150  0.000067     100.0  518.67  642.662381   \n5                5      269  0.000136 -0.000061     100.0  518.67  642.451970   \n...            ...      ...       ...       ...       ...     ...         ...   \n96              96      336 -0.000120  0.000027     100.0  518.67  642.629821   \n97              97      202 -0.000059  0.000077     100.0  518.67  642.522624   \n98              98      156  0.000269 -0.000066     100.0  518.67  642.584872   \n99              99      185 -0.000185  0.000017     100.0  518.67  642.611081   \n100            100      200 -0.000148 -0.000086     100.0  518.67  642.741250   \n\n                 Tag3         Tag4   Tag5  ...       Tag12        Tag13  \\\nAsset id                                   ...                            \n1         1589.485521  1407.262135  14.62  ...  521.459427  2388.110833   \n2         1588.181986  1404.265854  14.62  ...  521.811603  2388.053554   \n3         1588.715084  1405.628994  14.62  ...  521.773966  2388.047430   \n4         1590.563280  1408.253915  14.62  ...  521.501005  2388.082275   \n5         1588.153271  1404.878439  14.62  ...  521.866431  2388.029071   \n...               ...          ...    ...  ...         ...          ...   \n96        1589.856190  1407.889970  14.62  ...  521.454613  2388.100268   \n97        1589.431436  1405.888267  14.62  ...  521.715891  2388.060941   \n98        1588.884167  1406.270962  14.62  ...  521.656474  2388.070000   \n99        1589.501622  1407.740108  14.62  ...  521.511730  2388.098973   \n100       1591.659650  1410.267300  14.62  ...  521.291700  2388.108300   \n\n                Tag14     Tag15  Tag16       Tag17   Tag18  Tag19      Tag20  \\\nAsset id                                                                       \n1         8128.913542  8.436555   0.03  392.854167  2388.0  100.0  38.840052   \n2         8143.246167  8.423983   0.03  392.386760  2388.0  100.0  38.901150   \n3         8159.557654  8.430236   0.03  392.754190  2388.0  100.0  38.882793   \n4         8154.574444  8.439303   0.03  393.291005  2388.0  100.0  38.830265   \n5         8161.807844  8.425968   0.03  392.646840  2388.0  100.0  38.891078   \n...               ...       ...    ...         ...     ...    ...        ...   \n96        8136.360268  8.438163   0.03  393.110119  2388.0  100.0  38.826339   \n97        8154.680149  8.429250   0.03  392.801980  2388.0  100.0  38.881337   \n98        8145.904167  8.433159   0.03  392.724359  2388.0  100.0  38.860128   \n99        8136.383622  8.435239   0.03  393.102703  2388.0  100.0  38.859135   \n100       8142.613800  8.447907   0.03  393.565000  2388.0  100.0  38.781600   \n\n              Tag21  \nAsset id             \n1         23.306310  \n2         23.338997  \n3         23.321931  \n4         23.294502  \n5         23.336284  \n...             ...  \n96        23.300243  \n97        23.326633  \n98        23.331571  \n99        23.305792  \n100       23.269271  \n\n[100 rows x 26 columns]",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Asset id</th>\n      <th>runtime</th>\n      <th>Setting1</th>\n      <th>Setting2</th>\n      <th>Setting3</th>\n      <th>Tag1</th>\n      <th>Tag2</th>\n      <th>Tag3</th>\n      <th>Tag4</th>\n      <th>Tag5</th>\n      <th>...</th>\n      <th>Tag12</th>\n      <th>Tag13</th>\n      <th>Tag14</th>\n      <th>Tag15</th>\n      <th>Tag16</th>\n      <th>Tag17</th>\n      <th>Tag18</th>\n      <th>Tag19</th>\n      <th>Tag20</th>\n      <th>Tag21</th>\n    </tr>\n    <tr>\n      <th>Asset id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>192</td>\n      <td>-0.000189</td>\n      <td>0.000048</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.621042</td>\n      <td>1589.485521</td>\n      <td>1407.262135</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.459427</td>\n      <td>2388.110833</td>\n      <td>8128.913542</td>\n      <td>8.436555</td>\n      <td>0.03</td>\n      <td>392.854167</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.840052</td>\n      <td>23.306310</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>287</td>\n      <td>0.000051</td>\n      <td>0.000088</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.435226</td>\n      <td>1588.181986</td>\n      <td>1404.265854</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.811603</td>\n      <td>2388.053554</td>\n      <td>8143.246167</td>\n      <td>8.423983</td>\n      <td>0.03</td>\n      <td>392.386760</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.901150</td>\n      <td>23.338997</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>179</td>\n      <td>0.000137</td>\n      <td>-0.000014</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.543743</td>\n      <td>1588.715084</td>\n      <td>1405.628994</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.773966</td>\n      <td>2388.047430</td>\n      <td>8159.557654</td>\n      <td>8.430236</td>\n      <td>0.03</td>\n      <td>392.754190</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.882793</td>\n      <td>23.321931</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>189</td>\n      <td>0.000150</td>\n      <td>0.000067</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.662381</td>\n      <td>1590.563280</td>\n      <td>1408.253915</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.501005</td>\n      <td>2388.082275</td>\n      <td>8154.574444</td>\n      <td>8.439303</td>\n      <td>0.03</td>\n      <td>393.291005</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.830265</td>\n      <td>23.294502</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>269</td>\n      <td>0.000136</td>\n      <td>-0.000061</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.451970</td>\n      <td>1588.153271</td>\n      <td>1404.878439</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.866431</td>\n      <td>2388.029071</td>\n      <td>8161.807844</td>\n      <td>8.425968</td>\n      <td>0.03</td>\n      <td>392.646840</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.891078</td>\n      <td>23.336284</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>96</td>\n      <td>336</td>\n      <td>-0.000120</td>\n      <td>0.000027</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.629821</td>\n      <td>1589.856190</td>\n      <td>1407.889970</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.454613</td>\n      <td>2388.100268</td>\n      <td>8136.360268</td>\n      <td>8.438163</td>\n      <td>0.03</td>\n      <td>393.110119</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.826339</td>\n      <td>23.300243</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>97</td>\n      <td>202</td>\n      <td>-0.000059</td>\n      <td>0.000077</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.522624</td>\n      <td>1589.431436</td>\n      <td>1405.888267</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.715891</td>\n      <td>2388.060941</td>\n      <td>8154.680149</td>\n      <td>8.429250</td>\n      <td>0.03</td>\n      <td>392.801980</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.881337</td>\n      <td>23.326633</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>98</td>\n      <td>156</td>\n      <td>0.000269</td>\n      <td>-0.000066</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.584872</td>\n      <td>1588.884167</td>\n      <td>1406.270962</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.656474</td>\n      <td>2388.070000</td>\n      <td>8145.904167</td>\n      <td>8.433159</td>\n      <td>0.03</td>\n      <td>392.724359</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.860128</td>\n      <td>23.331571</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>99</td>\n      <td>185</td>\n      <td>-0.000185</td>\n      <td>0.000017</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.611081</td>\n      <td>1589.501622</td>\n      <td>1407.740108</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.511730</td>\n      <td>2388.098973</td>\n      <td>8136.383622</td>\n      <td>8.435239</td>\n      <td>0.03</td>\n      <td>393.102703</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.859135</td>\n      <td>23.305792</td>\n    </tr>\n    <tr>\n      <th>100</th>\n      <td>100</td>\n      <td>200</td>\n      <td>-0.000148</td>\n      <td>-0.000086</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.741250</td>\n      <td>1591.659650</td>\n      <td>1410.267300</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.291700</td>\n      <td>2388.108300</td>\n      <td>8142.613800</td>\n      <td>8.447907</td>\n      <td>0.03</td>\n      <td>393.565000</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.781600</td>\n      <td>23.269271</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows × 26 columns</p>\n</div>"
                    },
                    "metadata": {},
                    "execution_count": 48,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 48
        },
        {
            "cell_type": "markdown",
            "source": [
                "Para obter o dataset de teste, repetimos a célula anterior, substituindo train por teste"
            ],
            "metadata": {
                "azdata_cell_guid": "53e750f4-069e-44fe-89a8-f8e2f159a411"
            },
            "attachments": {}
        },
        {
            "cell_type": "code",
            "source": [
                "#Dataset de teste\r\n",
                "#column_names = ['Asset id', 'runtime', 'Setting1', 'Setting2', 'Setting3', 'Tag1', 'Tag2', 'Tag3', 'Tag4', 'Tag5', 'Tag6', 'Tag7', 'Tag8', 'Tag9', 'Tag10', \r\n",
                "#'Tag11', 'Tag12', 'Tag13', 'Tag14', 'Tag15', 'Tag16', 'Tag17', 'Tag18', 'Tag19', 'Tag20', 'Tag21']\r\n",
                "\r\n",
                "#lista dos índices\r\n",
                "indices = dataset_test.groupby('Asset id')[\"runtime\"].describe().index\r\n",
                "\r\n",
                "#lista do máximo runtime\r\n",
                "max_runtime = dataset_test.groupby('Asset id')[\"runtime\"].max()\r\n",
                "\r\n",
                "#listas dos valores médios\r\n",
                "avg1 = dataset_test.groupby('Asset id')[\"Setting1\"].mean()\r\n",
                "avg2= dataset_test.groupby('Asset id')[\"Setting2\"].mean()\r\n",
                "avg3 = dataset_test.groupby('Asset id')[\"Setting3\"].mean()\r\n",
                "avg4 = dataset_test.groupby('Asset id')[\"Tag1\"].mean()\r\n",
                "avg5= dataset_test.groupby('Asset id')[\"Tag2\"].mean()\r\n",
                "avg6= dataset_test.groupby('Asset id')[\"Tag3\"].mean()\r\n",
                "avg7= dataset_test.groupby('Asset id')[\"Tag4\"].mean()\r\n",
                "avg8= dataset_test.groupby('Asset id')[\"Tag5\"].mean()\r\n",
                "avg9= dataset_test.groupby('Asset id')[\"Tag6\"].mean()\r\n",
                "avg10= dataset_test.groupby('Asset id')[\"Tag7\"].mean()\r\n",
                "avg11= dataset_test.groupby('Asset id')[\"Tag8\"].mean()\r\n",
                "avg12= dataset_test.groupby('Asset id')[\"Tag9\"].mean()\r\n",
                "avg13= dataset_test.groupby('Asset id')[\"Tag10\"].mean()\r\n",
                "avg14= dataset_test.groupby('Asset id')[\"Tag11\"].mean()\r\n",
                "avg15= dataset_test.groupby('Asset id')[\"Tag12\"].mean()\r\n",
                "avg16= dataset_test.groupby('Asset id')[\"Tag13\"].mean()\r\n",
                "avg17= dataset_test.groupby('Asset id')[\"Tag14\"].mean()\r\n",
                "avg18= dataset_test.groupby('Asset id')[\"Tag15\"].mean()\r\n",
                "avg19= dataset_test.groupby('Asset id')[\"Tag16\"].mean()\r\n",
                "avg20= dataset_test.groupby('Asset id')[\"Tag17\"].mean()\r\n",
                "avg21= dataset_test.groupby('Asset id')[\"Tag18\"].mean()\r\n",
                "avg22= dataset_test.groupby('Asset id')[\"Tag19\"].mean()\r\n",
                "avg23= dataset_test.groupby('Asset id')[\"Tag20\"].mean()\r\n",
                "avg24= dataset_test.groupby('Asset id')[\"Tag21\"].mean()\r\n",
                "\r\n",
                "#dicionario dos valores\r\n",
                "d = {'Asset id': indices,  'runtime': max_runtime, 'Setting1': avg1, 'Setting2': avg2, 'Setting3': avg3, \r\n",
                "'Tag1': avg4, 'Tag2': avg5, 'Tag3': avg6, 'Tag4': avg7, 'Tag5': avg8, 'Tag6': avg9, 'Tag7': avg10, 'Tag8': avg11, \r\n",
                "'Tag9': avg12, 'Tag10': avg13, 'Tag11': avg14, 'Tag12': avg15, 'Tag13': avg16, 'Tag14': avg17, 'Tag15': avg18, \r\n",
                "'Tag16': avg19, 'Tag17': avg20, 'Tag18': avg21, 'Tag19': avg22, 'Tag20': avg23, 'Tag21': avg24}\r\n",
                "\r\n",
                "df_test = pd.DataFrame(data = d)\r\n",
                "df_test\r\n",
                "    "
            ],
            "metadata": {
                "azdata_cell_guid": "a1ae8ff8-7b9f-4939-bdad-bbd6b088a542"
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "          Asset id  runtime  Setting1  Setting2  Setting3    Tag1        Tag2  \\\nAsset id                                                                        \n1                1       31  0.000645  0.000035     100.0  518.67  642.319032   \n2                2       49 -0.000016  0.000041     100.0  518.67  642.605510   \n3                3      126  0.000176 -0.000061     100.0  518.67  642.693810   \n4                4      106 -0.000184  0.000024     100.0  518.67  642.577170   \n5                5       98  0.000336 -0.000069     100.0  518.67  642.639694   \n...            ...      ...       ...       ...       ...     ...         ...   \n96              96       97  0.000029 -0.000024     100.0  518.67  642.157113   \n97              97      134 -0.000357  0.000077     100.0  518.67  642.306567   \n98              98      121  0.000195  0.000011     100.0  518.67  642.508099   \n99              99       97 -0.000035  0.000015     100.0  518.67  642.094845   \n100            100      198 -0.000058  0.000052     100.0  518.67  642.380657   \n\n                 Tag3         Tag4   Tag5  ...       Tag12        Tag13  \\\nAsset id                                   ...                            \n1         1585.647742  1401.526129  14.62  ...  521.973226  2388.056774   \n2         1589.181429  1406.247347  14.62  ...  521.540612  2388.106327   \n3         1590.588095  1408.890317  14.62  ...  521.290556  2388.122540   \n4         1589.685094  1407.916132  14.62  ...  521.512453  2388.105472   \n5         1589.443673  1407.793469  14.62  ...  521.516327  2388.103469   \n...               ...          ...    ...  ...         ...          ...   \n96        1585.346082  1398.920103  14.62  ...  522.320103  2388.007113   \n97        1586.154179  1401.227463  14.62  ...  522.087090  2388.024254   \n98        1588.733802  1406.291653  14.62  ...  521.691488  2388.073471   \n99        1584.341031  1396.629278  14.62  ...  522.409897  2387.995773   \n100       1587.625152  1403.547828  14.62  ...  522.001465  2388.033535   \n\n                Tag14     Tag15  Tag16       Tag17   Tag18  Tag19      Tag20  \\\nAsset id                                                                       \n1         8131.004194  8.415994   0.03  391.741935  2388.0  100.0  38.978065   \n2         8128.561837  8.436027   0.03  392.734694  2388.0  100.0  38.855918   \n3         8130.903095  8.445067   0.03  393.333333  2388.0  100.0  38.821111   \n4         8133.110943  8.436429   0.03  392.801887  2388.0  100.0  38.843396   \n5         8132.136327  8.435858   0.03  392.938776  2388.0  100.0  38.837959   \n...               ...       ...    ...         ...     ...    ...        ...   \n96        8148.578557  8.401972   0.03  391.597938  2388.0  100.0  39.010515   \n97        8149.182164  8.410336   0.03  392.186567  2388.0  100.0  38.945075   \n98        8141.059835  8.429756   0.03  392.677686  2388.0  100.0  38.885702   \n99        8145.238041  8.395469   0.03  391.268041  2388.0  100.0  39.043299   \n100       8153.564495  8.418536   0.03  392.323232  2388.0  100.0  38.929747   \n\n              Tag21  \nAsset id             \n1         23.379097  \n2         23.313918  \n3         23.280522  \n4         23.297936  \n5         23.295200  \n...             ...  \n96        23.398418  \n97        23.379330  \n98        23.321926  \n99        23.410938  \n100       23.355818  \n\n[100 rows x 26 columns]",
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Asset id</th>\n      <th>runtime</th>\n      <th>Setting1</th>\n      <th>Setting2</th>\n      <th>Setting3</th>\n      <th>Tag1</th>\n      <th>Tag2</th>\n      <th>Tag3</th>\n      <th>Tag4</th>\n      <th>Tag5</th>\n      <th>...</th>\n      <th>Tag12</th>\n      <th>Tag13</th>\n      <th>Tag14</th>\n      <th>Tag15</th>\n      <th>Tag16</th>\n      <th>Tag17</th>\n      <th>Tag18</th>\n      <th>Tag19</th>\n      <th>Tag20</th>\n      <th>Tag21</th>\n    </tr>\n    <tr>\n      <th>Asset id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>31</td>\n      <td>0.000645</td>\n      <td>0.000035</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.319032</td>\n      <td>1585.647742</td>\n      <td>1401.526129</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.973226</td>\n      <td>2388.056774</td>\n      <td>8131.004194</td>\n      <td>8.415994</td>\n      <td>0.03</td>\n      <td>391.741935</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.978065</td>\n      <td>23.379097</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>49</td>\n      <td>-0.000016</td>\n      <td>0.000041</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.605510</td>\n      <td>1589.181429</td>\n      <td>1406.247347</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.540612</td>\n      <td>2388.106327</td>\n      <td>8128.561837</td>\n      <td>8.436027</td>\n      <td>0.03</td>\n      <td>392.734694</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.855918</td>\n      <td>23.313918</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>126</td>\n      <td>0.000176</td>\n      <td>-0.000061</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.693810</td>\n      <td>1590.588095</td>\n      <td>1408.890317</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.290556</td>\n      <td>2388.122540</td>\n      <td>8130.903095</td>\n      <td>8.445067</td>\n      <td>0.03</td>\n      <td>393.333333</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.821111</td>\n      <td>23.280522</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>106</td>\n      <td>-0.000184</td>\n      <td>0.000024</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.577170</td>\n      <td>1589.685094</td>\n      <td>1407.916132</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.512453</td>\n      <td>2388.105472</td>\n      <td>8133.110943</td>\n      <td>8.436429</td>\n      <td>0.03</td>\n      <td>392.801887</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.843396</td>\n      <td>23.297936</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>98</td>\n      <td>0.000336</td>\n      <td>-0.000069</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.639694</td>\n      <td>1589.443673</td>\n      <td>1407.793469</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.516327</td>\n      <td>2388.103469</td>\n      <td>8132.136327</td>\n      <td>8.435858</td>\n      <td>0.03</td>\n      <td>392.938776</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.837959</td>\n      <td>23.295200</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>96</td>\n      <td>97</td>\n      <td>0.000029</td>\n      <td>-0.000024</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.157113</td>\n      <td>1585.346082</td>\n      <td>1398.920103</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.320103</td>\n      <td>2388.007113</td>\n      <td>8148.578557</td>\n      <td>8.401972</td>\n      <td>0.03</td>\n      <td>391.597938</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>39.010515</td>\n      <td>23.398418</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>97</td>\n      <td>134</td>\n      <td>-0.000357</td>\n      <td>0.000077</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.306567</td>\n      <td>1586.154179</td>\n      <td>1401.227463</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.087090</td>\n      <td>2388.024254</td>\n      <td>8149.182164</td>\n      <td>8.410336</td>\n      <td>0.03</td>\n      <td>392.186567</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.945075</td>\n      <td>23.379330</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>98</td>\n      <td>121</td>\n      <td>0.000195</td>\n      <td>0.000011</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.508099</td>\n      <td>1588.733802</td>\n      <td>1406.291653</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>521.691488</td>\n      <td>2388.073471</td>\n      <td>8141.059835</td>\n      <td>8.429756</td>\n      <td>0.03</td>\n      <td>392.677686</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.885702</td>\n      <td>23.321926</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>99</td>\n      <td>97</td>\n      <td>-0.000035</td>\n      <td>0.000015</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.094845</td>\n      <td>1584.341031</td>\n      <td>1396.629278</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.409897</td>\n      <td>2387.995773</td>\n      <td>8145.238041</td>\n      <td>8.395469</td>\n      <td>0.03</td>\n      <td>391.268041</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>39.043299</td>\n      <td>23.410938</td>\n    </tr>\n    <tr>\n      <th>100</th>\n      <td>100</td>\n      <td>198</td>\n      <td>-0.000058</td>\n      <td>0.000052</td>\n      <td>100.0</td>\n      <td>518.67</td>\n      <td>642.380657</td>\n      <td>1587.625152</td>\n      <td>1403.547828</td>\n      <td>14.62</td>\n      <td>...</td>\n      <td>522.001465</td>\n      <td>2388.033535</td>\n      <td>8153.564495</td>\n      <td>8.418536</td>\n      <td>0.03</td>\n      <td>392.323232</td>\n      <td>2388.0</td>\n      <td>100.0</td>\n      <td>38.929747</td>\n      <td>23.355818</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows × 26 columns</p>\n</div>"
                    },
                    "metadata": {},
                    "execution_count": 49,
                    "output_type": "execute_result"
                }
            ],
            "execution_count": 49
        },
        {
            "cell_type": "markdown",
            "source": [
                "## **Exportar dataframe obtido como um arquivo CSV**"
            ],
            "metadata": {
                "azdata_cell_guid": "f79892d2-4325-4c42-b599-3a566e01ad90"
            }
        },
        {
            "cell_type": "markdown",
            "source": [
                "Temos que agrupar os asset id"
            ],
            "metadata": {
                "azdata_cell_guid": "2ef36976-16ad-40c5-94b6-59a80a705dc2"
            },
            "attachments": {}
        },
        {
            "cell_type": "markdown",
            "source": [
                "<span style=\"font-size:12.0pt;\n",
                "font-family:&quot;Times New Roman&quot;,serif;color:black;mso-themecolor:text1\">Principalmente quando trabalhamos com bases extensas e as quais devem ser trabalhadas por diversas operações matemáticas, pode ser interessante exportar as bases já trabalhadas como arquivos CSV (que ocupam menor memória e podem ser lidos facilmente pelo Python, R, ou mesmo Matlab). Veja este exemplo no qual selecionamos colunas de interesse e exportamos o dataset:</span>\n",
                "\n",
                "<span lang=\"EN-US\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,serif;background:yellow;\n",
                "mso-highlight:yellow;mso-ansi-language:EN-US\">dataset</span> <span lang=\"EN-US\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,serif;mso-ansi-language:\n",
                "EN-US\"> = <span style=\"background:yellow;mso-highlight:yellow\">dataset</span> [[<span style=\"background:yellow;mso-highlight:yellow\">'Contact ID'</span>, '<span style=\"background:yellow;mso-highlight:yellow\">Day</span>', <span style=\"background:yellow;mso-highlight:yellow\">'User type'</span>, <span style=\"background:yellow;mso-highlight:yellow\">'Contact channel'</span>, <span style=\"background:yellow;mso-highlight:yellow\">'Contact reason'</span>, <span style=\"background:yellow;mso-highlight:yellow\">'Client business type'</span>, <span style=\"background:yellow;mso-highlight:yellow\">'Call time (min)</span>', '<span style=\"background:yellow;mso-highlight:yellow\">Reason</span>', <span style=\"background:yellow;mso-highlight:yellow\">'Satisfaction grade'</span>, '<span style=\"background:yellow;mso-highlight:yellow\">Satisfaction (bin)'</span>]]</span>\n",
                "\n",
                "**<span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,serif;\n",
                "color:red\">O comando para exportação do arquivo deve ser declarado na forma:</span>**\n",
                "\n",
                "<span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,serif;background:yellow;\n",
                "mso-highlight:yellow\">df</span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,serif\">.to_csv(r<span style=\"background:yellow;mso-highlight:yellow\">\"endereço_do_arquivo\\<span style=\"color:red\">Nome_do_arquivo</span>.csv\"</span>, index = <span style=\"background:yellow;mso-highlight:yellow\">False</span>)<o:p></o:p></span>"
            ],
            "metadata": {
                "azdata_cell_guid": "af272da8-7c82-4575-8a33-8c40949a300d"
            }
        },
        {
            "cell_type": "code",
            "source": [
                "df_train.to_csv(r'df_train.csv', index = True)\r\n",
                "df_test.to_csv(r'df_test.csv', index = True)"
            ],
            "metadata": {
                "azdata_cell_guid": "d41c13f7-d750-419f-8fdc-162865adc2b1",
                "tags": []
            },
            "outputs": [],
            "execution_count": 51
        },
        {
            "cell_type": "markdown",
            "source": [
                "****"
            ],
            "metadata": {
                "azdata_cell_guid": "61af15ba-194d-4817-81b0-010b94ab93e1"
            }
        }
    ]
}